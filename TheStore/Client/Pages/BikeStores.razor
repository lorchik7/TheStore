@page "/bikestore"
@inject IBikeStoresService BikeStoreService
@inject NavigationManager NavigationManager
@implements IDisposable


<h3>Bike Stores</h3>

@if (BikeStoreService.Stores.Count == 0)
{
    <span>Loading Bike Stores...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>City</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var store in BikeStoreService.Stores)
            {
                <tr>
                    <td>@store.id</td>
                    <td>@store.name</td>
                    <td>@store.city</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => ShowStore(store.id))">Show</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<EditStore></EditStore>

@code
{
    @*List<TheStore.Shared.Store> stores = new List<TheStore.Shared.Store>();*@

    protected override async Task OnInitializedAsync()
    {
        await BikeStoreService.GetBikeStores();
        BikeStoreService.OnChange += StateHasChanged;
    }

    void ShowStore(int id)
    {
        NavigationManager.NavigateTo($"store/{id}");
    }

    public void Dispose()
    {
        BikeStoreService.OnChange -= StateHasChanged;
    }
}
